#pragma checksum "C:\Users\armyj\Desktop\Dev\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0f62a1bb0eb440454109eb85c6eb15963257a304"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 5 "C:\Users\armyj\Desktop\Dev\Views\_ViewImports.cshtml"
using CashewWeb.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\armyj\Desktop\Dev\Views\_ViewImports.cshtml"
using CashewWeb.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f62a1bb0eb440454109eb85c6eb15963257a304", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5bdce41afe05cb6178d8657d6bdb8dad386ded6f", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<HomeViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!-- Creator: Nicholas Jones-->\r\n");
#nullable restore
#line 3 "C:\Users\armyj\Desktop\Dev\Views\Home\Index.cshtml"
  
    ViewBag.Title = Model.PageTitle;

#line default
#line hidden
#nullable disable
            WriteLiteral("<!-- Card Example -->\r\n<div>\r\n    <h3 class=\"text-center\">");
#nullable restore
#line 8 "C:\Users\armyj\Desktop\Dev\Views\Home\Index.cshtml"
                       Write(Model.PageTitle);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h3>
    <div id=""calendar-div"">
        <div>
            <div id='calendar'></div>
        </div>
    </div>
    <div class=""card-deck"">
        <div class=""card"">
            <div class=""card-body"">
                <h5 class=""card-title"">Card title</h5>
                <p class=""card-text"">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                <p class=""card-text""><small class=""text-muted"">Last updated 3 mins ago</small></p>
            </div>
        </div>
        <div class=""card"">
            <div class=""card-body"">
                <h5 class=""card-title"">Card title</h5>
                <p class=""card-text"">This card has supporting text below as a natural lead-in to additional content.</p>
                <p class=""card-text""><small class=""text-muted"">Last updated 3 mins ago</small></p>
            </div>
        </div>
        <div class=""card"">
            <div class=""card-body"">
    ");
            WriteLiteral(@"            <h5 class=""card-title"">Card title</h5>
                <p class=""card-text"">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</p>
                <p class=""card-text""><small class=""text-muted"">Last updated 3 mins ago</small></p>
            </div>
        </div>
    </div>
</div>

<style>
    #calendar-div {
        margin: 40px 10px;
        padding: 0;
        font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
        font-size: 14px;
    }

    #calendar {
        max-width: 900px;
        margin: 0 auto;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        var calendar = new FullCalendar.Calendar(calendarEl, {
            plugins: ['interaction', 'dayGrid', 'timeGrid', 'list'],
            header: {
                left: 'prev,next");
            WriteLiteral(@" today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
            },
            defaultDate: '2019-08-12',
            navLinks: true, // can click day/week names to navigate views
            businessHours: true, // display business hours
            editable: true,
            events: [
                {
                    title: 'Business Lunch',
                    start: '2019-08-03T13:00:00',
                    constraint: 'businessHours'
                },
                {
                    title: 'Meeting',
                    start: '2019-08-13T11:00:00',
                    constraint: 'availableForMeeting', // defined below
                    color: '#257e4a'
                },
                {
                    title: 'Conference',
                    start: '2019-08-18',
                    end: '2019-08-20'
                },
                {
                    title: 'Party',
                    ");
            WriteLiteral(@"start: '2019-08-29T20:00:00'
                },

                // areas where ""Meeting"" must be dropped
                {
                    groupId: 'availableForMeeting',
                    start: '2019-08-11T10:00:00',
                    end: '2019-08-11T16:00:00',
                    rendering: 'background'
                },
                {
                    groupId: 'availableForMeeting',
                    start: '2019-08-13T10:00:00',
                    end: '2019-08-13T16:00:00',
                    rendering: 'background'
                },

                // red areas where no events can be dropped
                {
                    start: '2019-08-24',
                    end: '2019-08-28',
                    overlap: false,
                    rendering: 'background',
                    color: '#ff9f89'
                },
                {
                    start: '2019-08-06',
                    end: '2019-08-08',
                    overlap: false");
            WriteLiteral(",\r\n                    rendering: \'background\',\r\n                    color: \'#ff9f89\'\r\n                }\r\n            ]\r\n        });\r\n\r\n        calendar.render();\r\n    });\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<HomeViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
